structure ssm2Theory :> ssm2Theory =
struct
  val _ = if !Globals.print_thy_loads then TextIO.print "Loading ssm2Theory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (* Parents and ML dependencies *)
  local open ssm1Theory
  in end;
  val _ = Theory.link_parents
          ("ssm2",
          Arbnum.fromString "1555472128",
          Arbnum.fromString "914021")
          [("ssm1",
           Arbnum.fromString "1555472124",
           Arbnum.fromString "35479")];
  val _ = Theory.incorporate_types "ssm2" [("configuration2", 8)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("num", "num"), ID("ssm2", "configuration2"),
   ID("list", "list"), ID("aclfoundation", "Form"), ID("ssm1", "inst"),
   ID("min", "bool"), ID("ssm1", "trType"), ID("pair", "prod"),
   ID("aclfoundation", "po"), ID("aclfoundation", "Kripke"),
   ID("ind_type", "recspace"), ID("aclfoundation", "Princ"),
   ID("bool", "!"), ID("arithmetic", "+"), ID("pair", ","),
   ID("bool", "/\\"), ID("num", "0"), ID("min", "="), ID("min", "==>"),
   ID("bool", "?"), ID("arithmetic", "BIT1"), ID("ind_type", "BOTTOM"),
   ID("ssm1", "CFG"), ID("ssm1", "configuration"), ID("ssm2", "CFG2"),
   ID("ssm2", "CFG2Interpret"), ID("ssm1", "CFGInterpret"),
   ID("list", "CONS"), ID("ind_type", "CONSTR"), ID("bool", "DATATYPE"),
   ID("list", "MAP"), ID("list", "NIL"), ID("ssm1", "NONE"),
   ID("arithmetic", "NUMERAL"), ID("ssm1", "SOME"), ID("ssm1", "TR"),
   ID("ssm2", "TR2"), ID("bool", "TYPE_DEFINITION"),
   ID("arithmetic", "ZERO"), ID("bool", "\\/"),
   ID("ssm2", "configuration2_CASE"), ID("ssm2", "configuration2_size"),
   ID("ssm1", "discard"), ID("ssm1", "exec"), ID("list", "list_size"),
   ID("aclfoundation", "prop"), ID("aclrules", "sat"),
   ID("satList", "satList"), ID("aclfoundation", "says"),
   ID("ssm1", "trap"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [1], TYV "'state", TYV "'principal", TYV "'output", TYV "'input",
   TYV "'e", TYV "'d", TYV "'command", TYV "'cert",
   TYOP [2, 8, 7, 6, 5, 4, 3, 2, 1], TYOP [0, 9, 0], TYOP [0, 1, 0],
   TYOP [0, 11, 10], TYOP [0, 2, 0], TYOP [0, 13, 12], TYOP [0, 3, 0],
   TYOP [0, 15, 14], TYOP [0, 4, 0], TYOP [0, 17, 16], TYOP [0, 5, 0],
   TYOP [0, 19, 18], TYOP [0, 6, 0], TYOP [0, 21, 20], TYOP [0, 7, 0],
   TYOP [0, 23, 22], TYOP [0, 8, 0], TYOP [0, 25, 24], TYV "'a",
   TYOP [3, 3], TYOP [0, 28, 27], TYOP [0, 1, 29], TYOP [3, 4],
   TYOP [0, 31, 30], TYOP [5, 7], TYOP [4, 33, 2, 6, 5], TYOP [0, 1, 34],
   TYOP [0, 35, 32], TYOP [3, 8], TYOP [0, 37, 36], TYOP [6],
   TYOP [0, 34, 39], TYOP [0, 40, 38], TYOP [0, 8, 34], TYOP [0, 42, 41],
   TYOP [0, 4, 34], TYOP [0, 44, 43], TYOP [0, 45, 27], TYOP [0, 9, 46],
   TYOP [0, 9, 39], TYOP [0, 9, 48], TYOP [7, 7], TYOP [0, 50, 49],
   TYOP [9, 5], TYOP [9, 6], TYOP [8, 53, 52], TYV "'b",
   TYOP [10, 33, 55, 2, 6, 5], TYOP [8, 56, 54], TYOP [0, 57, 51],
   TYOP [0, 57, 48], TYOP [0, 28, 9], TYOP [0, 1, 60], TYOP [0, 31, 61],
   TYOP [0, 35, 62], TYOP [0, 37, 63], TYOP [0, 40, 64], TYOP [0, 42, 65],
   TYOP [0, 44, 66], TYOP [8, 1, 28], TYOP [8, 31, 68], TYOP [8, 35, 69],
   TYOP [8, 37, 70], TYOP [8, 40, 71], TYOP [8, 42, 72], TYOP [8, 44, 73],
   TYOP [11, 74], TYOP [0, 75, 39], TYOP [0, 50, 1], TYOP [0, 1, 77],
   TYOP [0, 50, 3], TYOP [0, 1, 79], TYOP [12, 2], TYOP [3, 34],
   TYOP [0, 67, 39], TYOP [0, 9, 27], TYOP [0, 9, 75], TYOP [0, 7, 39],
   TYOP [0, 86, 39], TYOP [0, 4, 39], TYOP [0, 88, 39], TYOP [0, 1, 39],
   TYOP [0, 90, 39], TYOP [0, 56, 39], TYOP [0, 92, 39], TYOP [0, 81, 39],
   TYOP [0, 94, 39], TYOP [0, 48, 39], TYOP [0, 42, 39], TYOP [0, 97, 39],
   TYOP [0, 25, 39], TYOP [0, 99, 39], TYOP [0, 23, 39], TYOP [0, 101, 39],
   TYOP [0, 21, 39], TYOP [0, 103, 39], TYOP [0, 19, 39],
   TYOP [0, 105, 39], TYOP [0, 44, 39], TYOP [0, 107, 39],
   TYOP [0, 17, 39], TYOP [0, 109, 39], TYOP [0, 15, 39],
   TYOP [0, 111, 39], TYOP [0, 13, 39], TYOP [0, 113, 39],
   TYOP [0, 35, 39], TYOP [0, 115, 39], TYOP [0, 80, 39],
   TYOP [0, 117, 39], TYOP [0, 78, 39], TYOP [0, 119, 39],
   TYOP [0, 11, 39], TYOP [0, 121, 39], TYOP [0, 40, 39],
   TYOP [0, 123, 39], TYOP [0, 96, 39], TYOP [0, 45, 39],
   TYOP [0, 126, 39], TYOP [0, 59, 39], TYOP [0, 128, 39],
   TYOP [0, 58, 39], TYOP [0, 130, 39], TYOP [0, 76, 39],
   TYOP [0, 132, 39], TYOP [0, 37, 39], TYOP [0, 134, 39],
   TYOP [0, 31, 39], TYOP [0, 136, 39], TYOP [0, 28, 39],
   TYOP [0, 138, 39], TYOP [0, 82, 39], TYOP [0, 140, 39],
   TYOP [0, 53, 39], TYOP [0, 142, 39], TYOP [0, 52, 39],
   TYOP [0, 144, 39], TYOP [0, 57, 39], TYOP [0, 146, 39],
   TYOP [0, 50, 39], TYOP [0, 148, 39], TYOP [0, 0, 0], TYOP [0, 0, 150],
   TYOP [0, 28, 68], TYOP [0, 1, 152], TYOP [0, 54, 57], TYOP [0, 56, 154],
   TYOP [0, 72, 73], TYOP [0, 42, 156], TYOP [0, 73, 74],
   TYOP [0, 44, 158], TYOP [0, 69, 70], TYOP [0, 35, 160],
   TYOP [0, 71, 72], TYOP [0, 40, 162], TYOP [0, 70, 71],
   TYOP [0, 37, 164], TYOP [0, 68, 69], TYOP [0, 31, 166],
   TYOP [0, 52, 54], TYOP [0, 53, 168], TYOP [0, 39, 39],
   TYOP [0, 39, 170], TYOP [0, 27, 39], TYOP [0, 27, 172], TYOP [0, 1, 90],
   TYOP [0, 34, 40], TYOP [0, 42, 97], TYOP [0, 44, 107],
   TYOP [0, 35, 115], TYOP [0, 40, 123], TYOP [0, 58, 130],
   TYOP [0, 37, 134], TYOP [0, 31, 136], TYOP [0, 28, 138],
   TYOP [0, 82, 140], TYOP [0, 0, 39], TYOP [0, 0, 185], TYOP [0, 57, 146],
   TYOP [0, 75, 76], TYOP [0, 50, 148], TYOP [0, 84, 39],
   TYOP [0, 190, 39], TYOP [0, 85, 39], TYOP [0, 192, 39],
   TYOP [24, 7, 6, 5, 3, 2, 1], TYOP [0, 28, 194], TYOP [0, 1, 195],
   TYOP [0, 82, 196], TYOP [0, 82, 197], TYOP [0, 35, 198],
   TYOP [0, 40, 199], TYOP [0, 194, 39], TYOP [0, 57, 201],
   TYOP [0, 31, 31], TYOP [0, 4, 203], TYOP [0, 28, 28], TYOP [0, 3, 205],
   TYOP [0, 82, 82], TYOP [0, 34, 207], TYOP [0, 0, 75], TYOP [0, 209, 75],
   TYOP [0, 74, 210], TYOP [0, 0, 211], TYOP [0, 37, 82],
   TYOP [0, 42, 213], TYOP [0, 7, 33], TYOP [0, 194, 201],
   TYOP [0, 50, 216], TYOP [0, 57, 217], TYOP [0, 76, 192],
   TYOP [0, 7, 50], TYOP [0, 37, 0], TYOP [0, 25, 221], TYOP [0, 31, 0],
   TYOP [0, 17, 223], TYOP [0, 28, 0], TYOP [0, 15, 225], TYOP [0, 33, 34],
   TYOP [0, 57, 40], TYOP [0, 57, 140], TYOP [0, 34, 34],
   TYOP [0, 81, 230]]
  end
  val _ = Theory.incorporate_consts "ssm2" tyvector
     [("configuration2_size", 26), ("configuration2_CASE", 47),
      ("TR2", 58), ("CFG2Interpret", 59), ("CFG2", 67)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("'configuration2'", 76), TMV("M", 56), TMV("M", 9), TMV("M'", 9),
   TMV("NS", 78), TMV("Oi", 53), TMV("Os", 52), TMV("Out", 80),
   TMV("P", 81), TMV("P", 48), TMV("P", 59), TMV("TR2'", 58),
   TMV("a0", 44), TMV("a0", 57), TMV("a0'", 44), TMV("a0'", 75),
   TMV("a1", 42), TMV("a1", 50), TMV("a1'", 42), TMV("a2", 9),
   TMV("a2", 40), TMV("a2'", 40), TMV("a3", 9), TMV("a3", 37),
   TMV("a3'", 37), TMV("a4", 35), TMV("a4'", 35), TMV("a5", 31),
   TMV("a5'", 31), TMV("a6", 1), TMV("a6'", 1), TMV("a7", 28),
   TMV("a7'", 28), TMV("c", 9), TMV("cc", 9), TMV("certInterpret", 42),
   TMV("certs", 37), TMV("certs", 82), TMV("certs2", 37), TMV("cmd", 7),
   TMV("configuration2", 83), TMV("f", 25), TMV("f", 44), TMV("f", 45),
   TMV("f'", 45), TMV("f0", 42), TMV("f1", 23), TMV("f1", 40),
   TMV("f2", 21), TMV("f2", 35), TMV("f3", 19), TMV("f4", 17),
   TMV("f5", 15), TMV("f6", 13), TMV("f7", 11), TMV("fn", 84),
   TMV("inputInterpret", 44), TMV("inputTest", 40), TMV("ins", 31),
   TMV("ins", 82), TMV("ins2", 31), TMV("l", 37), TMV("l0", 31),
   TMV("l1", 28), TMV("n", 0), TMV("outStream", 28), TMV("rep", 85),
   TMV("s", 1), TMV("state", 1), TMV("stateInterpret", 35), TMV("v", 56),
   TMV("v1", 53), TMV("v12", 44), TMV("v13", 42), TMV("v14", 40),
   TMV("v15", 37), TMV("v16", 35), TMV("v17", 1), TMV("v18", 28),
   TMV("v19", 57), TMV("v2", 52), TMV("v3", 9), TMV("x", 4), TMC(13, 87),
   TMC(13, 89), TMC(13, 91), TMC(13, 93), TMC(13, 95), TMC(13, 96),
   TMC(13, 98), TMC(13, 100), TMC(13, 102), TMC(13, 104), TMC(13, 106),
   TMC(13, 108), TMC(13, 110), TMC(13, 112), TMC(13, 114), TMC(13, 116),
   TMC(13, 118), TMC(13, 120), TMC(13, 122), TMC(13, 124), TMC(13, 125),
   TMC(13, 127), TMC(13, 129), TMC(13, 131), TMC(13, 133), TMC(13, 135),
   TMC(13, 137), TMC(13, 139), TMC(13, 141), TMC(13, 143), TMC(13, 145),
   TMC(13, 147), TMC(13, 132), TMC(13, 149), TMC(14, 151), TMC(15, 153),
   TMC(15, 155), TMC(15, 157), TMC(15, 159), TMC(15, 161), TMC(15, 163),
   TMC(15, 165), TMC(15, 167), TMC(15, 169), TMC(16, 171), TMC(17, 0),
   TMC(18, 173), TMC(18, 174), TMC(18, 175), TMC(18, 171), TMC(18, 49),
   TMC(18, 176), TMC(18, 177), TMC(18, 178), TMC(18, 179), TMC(18, 180),
   TMC(18, 181), TMC(18, 182), TMC(18, 183), TMC(18, 184), TMC(18, 186),
   TMC(18, 187), TMC(18, 188), TMC(18, 189), TMC(19, 171), TMC(20, 87),
   TMC(20, 89), TMC(20, 91), TMC(20, 93), TMC(20, 98), TMC(20, 108),
   TMC(20, 116), TMC(20, 118), TMC(20, 120), TMC(20, 124), TMC(20, 191),
   TMC(20, 193), TMC(20, 135), TMC(20, 137), TMC(20, 139), TMC(20, 143),
   TMC(20, 145), TMC(21, 150), TMC(22, 75), TMC(23, 200), TMC(25, 67),
   TMC(26, 59), TMC(27, 202), TMC(28, 204), TMC(28, 206), TMC(28, 208),
   TMC(29, 212), TMC(30, 170), TMC(31, 214), TMC(32, 31), TMC(33, 33),
   TMC(34, 150), TMC(35, 215), TMC(36, 218), TMC(37, 58), TMC(38, 219),
   TMC(39, 0), TMC(40, 171), TMC(41, 47), TMC(42, 26), TMC(43, 50),
   TMC(44, 220), TMC(45, 222), TMC(45, 224), TMC(45, 226), TMC(46, 227),
   TMC(47, 228), TMC(48, 229), TMC(49, 231), TMC(50, 220), TMC(51, 170)]
  end
  structure ThmBind = struct
    val DT = Thm.disk_thm
    val read = Term.read_raw tmvector
  end
  fun op configuration2_TY_DEF x = x
    val op configuration2_TY_DEF =
    ThmBind.DT(((("ssm2",0),[("bool",[26])]),["DISK_THM"]),
               [ThmBind.read"%159%66%183%15%107%0%147%115%15%147%153%12%152%16%157%20%160%23%154%25%161%27%150%29%162%31%145$8@%12%16%20%23%25%27%29%31%174%128@%121$7@%120$6@%123$5@%124$4@%122$3@%125$2@%118$1@$0@8%64%166|@||||||||$7@$6@$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@|@|@2$1$0@2|@2$0$1@2|@|@$0@|@"])
  fun op configuration2_case_def x = x
    val op configuration2_case_def =
    ThmBind.DT(((("ssm2",4),
                [("bool",[26,180]),("ind_type",[33,34]),("pair",[8,9]),
                 ("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%94%12%89%16%102%20%108%23%98%25%109%27%85%29%110%31%104%43%129%186%168$8@$7@$6@$5@$4@$3@$2@$1@2$0@2$0$8@$7@$6@$5@$4@$3@$2@$1@2|@|@|@|@|@|@|@|@|@"])
  fun op configuration2_size_def x = x
    val op configuration2_size_def =
    ThmBind.DT(((("ssm2",5),
                [("bool",[26,180]),("ind_type",[33,34]),("pair",[8,9]),
                 ("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%90%41%91%46%92%48%93%50%95%51%96%52%97%53%101%54%94%12%89%16%102%20%108%23%98%25%109%27%85%29%110%31%143%187$15@$14@$13@$12@$11@$10@$9@$8@%168$7@$6@$5@$4@$3@$2@$1@$0@3%117%179%165%184@3%117%190$15@$4@2%117%191$11@$2@2%117$8$1@2%192$10@$0@6|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op TR2_def x = x
    val op TR2_def =
    ThmBind.DT(((("ssm2",17),[]),[]),
               [ThmBind.read"%138%182@%13%17%19%22%106%11%147%114%13%116%17%88%19%88%22%147%185%153%56%152%35%157%57%149%82%156%4%151%1%163%5%164%6%155%7%150%68%160%36%154%69%148%39%161%58%162%65%127%144$18@%119$9@%126$8@$7@4%127%146$17@%189$2@3%127%133$16@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@3%127%133$15@%168$14@$13@$12@$4@$3@$1@$10$5@%189$2@3%172$6$5@%189$2@3$0@4%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%185%153%56%152%35%157%57%149%82%156%4%151%1%163%5%164%6%155%7%150%68%160%36%154%69%148%39%161%58%162%65%127%144$18@%119$9@%126$8@$7@4%127%146$17@%197$2@3%127%133$16@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@3%127%133$15@%168$14@$13@$12@$4@$3@$1@$10$5@%197$2@3%172$6$5@%197$2@3$0@4%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%153%56%152%35%157%57%149%82%156%4%151%1%163%5%164%6%155%7%150%68%160%36%154%69%148%39%161%58%162%65%127%144$18@%119$9@%126$8@$7@4%127%146$17@%188@2%127%133$16@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@3%127%133$15@%168$14@$13@$12@$4@$3@$1@$10$5@%188@2%172$6$5@%188@2$0@4%198$12$14$11@7|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@4$4$3@$2@$1@$0@2|@|@|@|@2$0$4@$3@$2@$1@2|@||||@"])
  fun op datatype_configuration2 x = x
    val op datatype_configuration2 =
    ThmBind.DT(((("ssm2",6),[("bool",[25,170])]),["DISK_THM"]),
               [ThmBind.read"%175%40%168@2"])
  fun op configuration2_11 x = x
    val op configuration2_11 =
    ThmBind.DT(((("ssm2",7),
                [("bool",[26,50,55,62,180]),("ind_type",[33,34]),
                 ("pair",[8,9]),("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%94%12%89%16%102%20%108%23%98%25%109%27%85%29%110%31%94%14%89%18%102%21%108%24%98%26%109%28%85%30%110%32%132%133%168$15@$14@$13@$12@$11@$10@$9@$8@2%168$7@$6@$5@$4@$3@$2@$1@$0@3%127%135$15@$7@2%127%134$14@$6@2%127%137$13@$5@2%127%139$12@$4@2%127%136$11@$3@2%127%140$10@$2@2%127%130$9@$1@2%141$8@$0@9|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op configuration2_case_cong x = x
    val op configuration2_case_cong =
    ThmBind.DT(((("ssm2",8),
                [("bool",[26,180]),("ssm2",[1,2,3,4])]),["DISK_THM"]),
               [ThmBind.read"%88%2%88%3%104%43%147%127%133$2@$1@2%94%12%89%16%102%20%108%23%98%25%109%27%85%29%110%31%147%133$9@%168$7@$6@$5@$4@$3@$2@$1@$0@3%129$8$7@$6@$5@$4@$3@$2@$1@$0@2%44$7@$6@$5@$4@$3@$2@$1@$0@3|@|@|@|@|@|@|@|@3%129%186$2@$0@2%186$1@%44@3|@|@|@"])
  fun op configuration2_nchotomy x = x
    val op configuration2_nchotomy =
    ThmBind.DT(((("ssm2",9),
                [("bool",[26,180]),("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%88%34%153%42%152%45%157%47%160%61%154%49%161%62%150%67%162%63%133$8@%168$7@$6@$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@|@|@|@"])
  fun op configuration2_Axiom x = x
    val op configuration2_Axiom =
    ThmBind.DT(((("ssm2",10),
                [("bool",[26,180]),("ind_type",[33,34]),("pair",[8,9]),
                 ("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%104%43%158%55%94%12%89%16%102%20%108%23%98%25%109%27%85%29%110%31%129$8%168$7@$6@$5@$4@$3@$2@$1@$0@3$9$7@$6@$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@|@|@|@|@"])
  fun op configuration2_induction x = x
    val op configuration2_induction =
    ThmBind.DT(((("ssm2",11),
                [("bool",[26]),("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%103%9%147%94%42%89%45%102%47%108%61%98%49%109%62%85%67%110%63$8%168$7@$6@$5@$4@$3@$2@$1@$0@2|@|@|@|@|@|@|@|@2%88%33$1$0@|@2|@"])
  fun op configuration2_one_one x = x
    val op configuration2_one_one =
    ThmBind.DT(((("ssm2",12),
                [("bool",[26,50,55,62,180]),("ind_type",[33,34]),
                 ("pair",[8,9]),("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%94%12%89%16%102%20%108%23%98%25%109%27%85%29%110%31%94%14%89%18%102%21%108%24%98%26%109%28%85%30%110%32%132%133%168$15@$14@$13@$12@$11@$10@$9@$8@2%168$7@$6@$5@$4@$3@$2@$1@$0@3%127%135$15@$7@2%127%134$14@$6@2%127%137$13@$5@2%127%139$12@$4@2%127%136$11@$3@2%127%140$10@$2@2%127%130$9@$1@2%141$8@$0@9|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op CFG2Interpret_ind x = x
    val op CFG2Interpret_ind =
    ThmBind.DT(((("ssm2",15),
                [("bool",[25,26,46,47,52,53,57,62,71,75,76,77,79,180]),
                 ("list",[46]),("pair",[5,16]),("relation",[107,113]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15]),
                 ("ssm2",[1,2,3])]),["DISK_THM"]),
               [ThmBind.read"%105%10%147%127%86%1%112%5%113%6%94%56%89%35%102%57%108%36%98%69%84%82%109%58%85%68%110%65$12%119$11@%126$10@$9@3%168$8@$7@$6@$5@$4@%171$3@$2@2$1@$0@2|@|@|@|@|@|@|@|@|@|@|@|@2%114%79%94%72%89%73%102%74%108%75%98%76%85%77%110%78$8$7@%168$6@$5@$4@$3@$2@%177@$1@$0@2|@|@|@|@|@|@|@|@3%86%70%112%71%113%80%88%81$4%119$3@%126$2@$1@3$0@|@|@|@|@2|@"])
  fun op CFG2Interpret_def x = x
    val op CFG2Interpret_def =
    ThmBind.DT(((("ssm2",16),
                [("bool",[15,57]),("combin",[19]),("list",[6]),
                 ("pair",[49]),("relation",[113,132]),
                 ("ssm2",[4,13,14])]),["DISK_THM"]),
               [ThmBind.read"%132%169%119%1@%126%5@%6@3%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@3%127%195%119%1@%126%5@%6@3%176%35@%36@3%127%194%119%1@%126%5@%6@3%56%82@3%194%119%1@%126%5@%6@3%69%68@5"])
  fun op TR2_rules x = x
    val op TR2_rules =
    ThmBind.DT(((("ssm2",18),[("bool",[26]),("ssm2",[17])]),["DISK_THM"]),
               [ThmBind.read"%127%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@4%182%119$9@%126$8@$7@3%189$2@2%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%189$2@3%172$6$5@%189$2@3$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%127%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@4%182%119$9@%126$8@$7@3%197$2@2%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%197$2@3%172$6$5@%197$2@3$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%198$12$14$11@4%182%119$9@%126$8@$7@3%188@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%188@2%172$6$5@%188@2$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@3"])
  fun op TR2_ind x = x
    val op TR2_ind =
    ThmBind.DT(((("ssm2",19),[("bool",[26]),("ssm2",[17])]),["DISK_THM"]),
               [ThmBind.read"%106%11%147%127%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@4$15%119$9@%126$8@$7@3%189$2@2%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%189$2@3%172$6$5@%189$2@3$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%127%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@4$15%119$9@%126$8@$7@3%197$2@2%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%197$2@3%172$6$5@%197$2@3$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%198$12$14$11@4$15%119$9@%126$8@$7@3%188@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%188@2%172$6$5@%188@2$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@4%114%13%116%17%88%19%88%22%147%182$3@$2@$1@$0@2$4$3@$2@$1@$0@2|@|@|@|@2|@"])
  fun op TR2_strongind x = x
    val op TR2_strongind =
    ThmBind.DT(((("ssm2",20),
                [("bool",[26,35]),("ssm2",[17])]),["DISK_THM"]),
               [ThmBind.read"%106%11%147%127%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@4$15%119$9@%126$8@$7@3%189$2@2%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%189$2@3%172$6$5@%189$2@3$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%127%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%83%39%109%58%110%65%147%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@4$15%119$9@%126$8@$7@3%197$2@2%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@2%168$14@$13@$12@$4@$3@$1@$10$5@%197$2@3%172$6$5@%197$2@3$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%94%56%89%35%102%57%84%82%100%4%86%1%112%5%113%6%99%7%85%68%108%36%98%69%109%58%110%65%147%198$11$13$10@4$14%119$8@%126$7@$6@3%188@%168$13@$12@$11@$3@$2@%171$10@$1@2$4@$0@2%168$13@$12@$11@$3@$2@$1@$9$4@%188@2%172$5$4@%188@2$0@4|@|@|@|@|@|@|@|@|@|@|@|@|@|@4%114%13%116%17%88%19%88%22%147%182$3@$2@$1@$0@2$4$3@$2@$1@$0@2|@|@|@|@2|@"])
  fun op TR2_cases x = x
    val op TR2_cases =
    ThmBind.DT(((("ssm2",21),[("bool",[26]),("ssm2",[17])]),["DISK_THM"]),
               [ThmBind.read"%114%13%116%17%88%19%88%22%132%182$3@$2@$1@$0@2%185%153%56%152%35%157%57%149%82%156%4%151%1%163%5%164%6%155%7%150%68%160%36%154%69%148%39%161%58%162%65%127%144$18@%119$9@%126$8@$7@4%127%146$17@%189$2@3%127%133$16@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@3%127%133$15@%168$14@$13@$12@$4@$3@$1@$10$5@%189$2@3%172$6$5@%189$2@3$0@4%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%185%153%56%152%35%157%57%149%82%156%4%151%1%163%5%164%6%155%7%150%68%160%36%154%69%148%39%161%58%162%65%127%144$18@%119$9@%126$8@$7@4%127%146$17@%197$2@3%127%133$16@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@3%127%133$15@%168$14@$13@$12@$4@$3@$1@$10$5@%197$2@3%172$6$5@%197$2@3$0@4%127$12$14$11@3%169%119$9@%126$8@$7@3%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@7|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@2%153%56%152%35%157%57%149%82%156%4%151%1%163%5%164%6%155%7%150%68%160%36%154%69%148%39%161%58%162%65%127%144$18@%119$9@%126$8@$7@4%127%146$17@%188@2%127%133$16@%168$14@$13@$12@$4@$3@%171$11@$1@2$5@$0@3%127%133$15@%168$14@$13@$12@$4@$3@$1@$10$5@%188@2%172$6$5@%188@2$0@4%198$12$14$11@7|@|@|@|@|@|@|@|@|@|@|@|@|@|@|@4|@|@|@|@"])
  fun op TR2_EQ_rules_thm x = x
    val op TR2_EQ_rules_thm =
    ThmBind.DT(((("ssm2",22),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%127%132%182%119%1@%126%5@%6@3%189%39@2%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@2%168%56@%35@%57@%36@%69@%58@%4%68@%189%39@3%172%7%68@%189%39@3%65@4%127%57%56%82@3%169%119%1@%126%5@%6@3%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@5%127%132%182%119%1@%126%5@%6@3%197%39@2%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@2%168%56@%35@%57@%36@%69@%58@%4%68@%197%39@3%172%7%68@%197%39@3%65@4%127%57%56%82@3%169%119%1@%126%5@%6@3%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@5%132%182%119%1@%126%5@%6@3%188@%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@2%168%56@%35@%57@%36@%69@%58@%4%68@%188@2%172%7%68@%188@2%65@4%198%57%56%82@6"])
  fun op TR2rule0 x = x
    val op TR2rule0 =
    ThmBind.DT(((("ssm2",23),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%132%182%119%1@%126%5@%6@3%189%39@2%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@2%168%56@%35@%57@%36@%69@%58@%4%68@%189%39@3%172%7%68@%189%39@3%65@4%127%57%56%82@3%169%119%1@%126%5@%6@3%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@4"])
  fun op TR2rule1 x = x
    val op TR2rule1 =
    ThmBind.DT(((("ssm2",24),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%132%182%119%1@%126%5@%6@3%197%39@2%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@2%168%56@%35@%57@%36@%69@%58@%4%68@%197%39@3%172%7%68@%197%39@3%65@4%127%57%56%82@3%169%119%1@%126%5@%6@3%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@4"])
  fun op TR2_discard_cmd_rule x = x
    val op TR2_discard_cmd_rule =
    ThmBind.DT(((("ssm2",25),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%132%182%119%1@%126%5@%6@3%188@%168%56@%35@%57@%36@%69@%171%82@%58@2%68@%65@2%168%56@%35@%57@%36@%69@%58@%4%68@%188@2%172%7%68@%188@2%65@4%198%57%56%82@4"])
  fun op TR2_exec_cmd_rule x = x
    val op TR2_exec_cmd_rule =
    ThmBind.DT(((("ssm2",26),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%94%56%89%35%102%57%108%36%98%69%84%82%83%39%109%58%85%68%110%65%147%86%1%112%5%113%6%147%169%119$2@%126$1@$0@3%168$12@$11@$10@$9@$8@%171$7@$5@2$4@$3@3%194%119$2@%126$1@$0@3%193%180$6@4|@|@|@2%100%4%99%7%86%1%112%5%113%6%132%182%119$2@%126$1@$0@3%189$8@2%168$14@$13@$12@$11@$10@%171$9@$7@2$6@$5@2%168$14@$13@$12@$11@$10@$7@$4$6@%189$8@3%172$3$6@%189$8@3$5@4%127$12$14$9@3%127%169%119$2@%126$1@$0@3%168$14@$13@$12@$11@$10@%171$9@$7@2$6@$5@3%194%119$2@%126$1@$0@3%193%180$8@6|@|@|@|@|@2|@|@|@|@|@|@|@|@|@|@"])
  fun op TR2_trap_cmd_rule x = x
    val op TR2_trap_cmd_rule =
    ThmBind.DT(((("ssm2",27),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%94%56%89%35%102%57%108%36%98%69%84%82%83%39%109%58%85%68%110%65%147%86%1%112%5%113%6%147%169%119$2@%126$1@$0@3%168$12@$11@$10@$9@$8@%171$7@$5@2$4@$3@3%194%119$2@%126$1@$0@3%193%178@3|@|@|@2%100%4%99%7%86%1%112%5%113%6%132%182%119$2@%126$1@$0@3%197$8@2%168$14@$13@$12@$11@$10@%171$9@$7@2$6@$5@2%168$14@$13@$12@$11@$10@$7@$4$6@%197$8@3%172$3$6@%197$8@3$5@4%127$12$14$9@3%127%169%119$2@%126$1@$0@3%168$14@$13@$12@$11@$10@%171$9@$7@2$6@$5@3%194%119$2@%126$1@$0@3%193%178@5|@|@|@|@|@2|@|@|@|@|@|@|@|@|@|@"])
  fun op TR2_iff_TR_discard_thm x = x
    val op TR2_iff_TR_discard_thm =
    ThmBind.DT(((("ssm2",28),
                [("bool",
                 [13,25,26,27,29,35,46,47,50,51,52,53,55,62,92,93,95,180]),
                 ("combin",[19]),("ind_type",[33,34]),("list",[9]),
                 ("pair",[8,9]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35,61]),("ssm2",[1,2,3,17])]),["DISK_THM"]),
               [ThmBind.read"%100%4%99%7%110%65%85%68%111%37%108%38%84%82%111%59%109%60%98%69%94%56%89%35%102%57%132%182%119%1@%126%5@%6@3%188@%168$2@$1@$0@$7@$3@%171$6@$4@2$9@$10@2%168$2@$1@$0@$7@$3@$4@$12$9@%188@2%172$11$9@%188@2$10@4%181%119%1@%126%5@%6@3%188@%167$0@$3@$8@%173$2$6@2$5@2$9@$10@2%167$0@$3@$8@$5@$12$9@%188@2%172$11$9@%188@2$10@4|@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op TR2_iff_TR_exec_thm x = x
    val op TR2_iff_TR_exec_thm =
    ThmBind.DT(((("ssm2",29),
                [("bool",
                 [13,15,25,26,27,29,35,46,47,50,51,52,53,55,57,62,92,93,95,
                  180]),("combin",[19]),("ind_type",[33,34]),
                 ("list",[6,9]),("pair",[8,9,49]),("relation",[113,132]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35,52,62]),
                 ("ssm2",[1,2,3,4,13,14,17])]),["DISK_THM"]),
               [ThmBind.read"%94%56%89%35%102%57%111%37%108%38%98%69%84%82%87%8%83%39%111%59%109%60%85%68%110%65%147%131$12$6@2%196$5@%193%180$4@5%147%142%176$11@$8@2$9@2%147%86%1%112%5%113%6%147%170%119$2@%126$1@$0@3%167$13@$10@$12@%173$15$9@2$6@2$4@$3@3%194%119$2@%126$1@$0@3%193%180$7@4|@|@|@2%147%86%1%112%5%113%6%147%169%119$2@%126$1@$0@3%168$15@$14@$13@$11@$10@%171$9@$5@2$4@$3@3%194%119$2@%126$1@$0@3%193%180$7@4|@|@|@2%100%4%99%7%86%1%112%5%113%6%132%182%119$2@%126$1@$0@3%189$9@2%168$17@$16@$15@$13@$12@%171$11@$7@2$6@$5@2%168$17@$16@$15@$13@$12@$7@$4$6@%189$9@3%172$3$6@%189$9@3$5@4%181%119$2@%126$1@$0@3%189$9@2%167$15@$12@$14@%173$17$11@2$8@2$6@$5@2%167$15@$12@$14@$8@$4$6@%189$9@3%172$3$6@%189$9@3$5@4|@|@|@|@|@5|@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op TR2_iff_TR_trap_thm x = x
    val op TR2_iff_TR_trap_thm =
    ThmBind.DT(((("ssm2",30),
                [("bool",
                 [13,15,25,26,27,29,35,46,47,50,51,52,53,55,57,62,92,93,95,
                  180]),("combin",[19]),("ind_type",[33,34]),
                 ("list",[6,9]),("pair",[8,9,49]),("relation",[113,132]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
                 ("ssm1",[34,35,52,63]),
                 ("ssm2",[1,2,3,4,13,14,17])]),["DISK_THM"]),
               [ThmBind.read"%94%56%89%35%102%57%111%37%108%38%98%69%84%82%87%8%83%39%111%59%109%60%85%68%110%65%147%131$12$6@2%196$5@%193%180$4@5%147%142%176$11@$8@2$9@2%147%86%1%112%5%113%6%147%170%119$2@%126$1@$0@3%167$13@$10@$12@%173$15$9@2$6@2$4@$3@3%194%119$2@%126$1@$0@3%193%178@3|@|@|@2%147%86%1%112%5%113%6%147%169%119$2@%126$1@$0@3%168$15@$14@$13@$11@$10@%171$9@$5@2$4@$3@3%194%119$2@%126$1@$0@3%193%178@3|@|@|@2%100%4%99%7%86%1%112%5%113%6%132%182%119$2@%126$1@$0@3%197$9@2%168$17@$16@$15@$13@$12@%171$11@$7@2$6@$5@2%168$17@$16@$15@$13@$12@$7@$4$6@%197$9@3%172$3$6@%197$9@3$5@4%181%119$2@%126$1@$0@3%197$9@2%167$15@$12@$14@%173$17$11@2$8@2$6@$5@2%167$15@$12@$14@$8@$4$6@%197$9@3%172$3$6@%197$9@3$5@4|@|@|@|@|@5|@|@|@|@|@|@|@|@|@|@|@|@|@"])

  val _ = DB.bindl "ssm2"
  [("configuration2_TY_DEF",configuration2_TY_DEF,DB.Def),
   ("configuration2_case_def",configuration2_case_def,DB.Def),
   ("configuration2_size_def",configuration2_size_def,DB.Def),
   ("TR2_def",TR2_def,DB.Def),
   ("datatype_configuration2",datatype_configuration2,DB.Thm),
   ("configuration2_11",configuration2_11,DB.Thm),
   ("configuration2_case_cong",configuration2_case_cong,DB.Thm),
   ("configuration2_nchotomy",configuration2_nchotomy,DB.Thm),
   ("configuration2_Axiom",configuration2_Axiom,DB.Thm),
   ("configuration2_induction",configuration2_induction,DB.Thm),
   ("configuration2_one_one",configuration2_one_one,DB.Thm),
   ("CFG2Interpret_ind",CFG2Interpret_ind,DB.Thm),
   ("CFG2Interpret_def",CFG2Interpret_def,DB.Thm),
   ("TR2_rules",TR2_rules,DB.Thm), ("TR2_ind",TR2_ind,DB.Thm),
   ("TR2_strongind",TR2_strongind,DB.Thm), ("TR2_cases",TR2_cases,DB.Thm),
   ("TR2_EQ_rules_thm",TR2_EQ_rules_thm,DB.Thm),
   ("TR2rule0",TR2rule0,DB.Thm), ("TR2rule1",TR2rule1,DB.Thm),
   ("TR2_discard_cmd_rule",TR2_discard_cmd_rule,DB.Thm),
   ("TR2_exec_cmd_rule",TR2_exec_cmd_rule,DB.Thm),
   ("TR2_trap_cmd_rule",TR2_trap_cmd_rule,DB.Thm),
   ("TR2_iff_TR_discard_thm",TR2_iff_TR_discard_thm,DB.Thm),
   ("TR2_iff_TR_exec_thm",TR2_iff_TR_exec_thm,DB.Thm),
   ("TR2_iff_TR_trap_thm",TR2_iff_TR_trap_thm,DB.Thm)]

  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm2",
    thydataty = "rule_induction",
    read = ThmBind.read,
    data = "ssm2.TR2_strongind"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm2",
    thydataty = "compute",
    read = ThmBind.read,
    data = "ssm2.CFG2Interpret_def"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm2",
    thydataty = "TypeGrammarDeltas",
    read = ThmBind.read,
    data = "NTY4.ssm2,14.configuration2"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "ssm2",
    thydataty = "TermGrammarDeltas",
    read = ThmBind.read,
    data =
        "OO4.CFG24.%168OO19.configuration2_CASE4.%186OO19.configuration2_size4.%187OO4.case4.%186OO13.CFG2Interpret4.%169OO3.TR24.%182"
  }
  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val ssm2_grammars = merge_grammars ["ssm1"]
  local
  val (tyUDs, tmUDs) = GrammarDeltas.thy_deltas{thyname="ssm2"}
  val addtmUDs = term_grammar.add_deltas tmUDs
  val addtyUDs = type_grammar.apply_deltas tyUDs
  in
  val ssm2_grammars = 
    Portable.## (addtyUDs,addtmUDs) ssm2_grammars
  val _ = Parse.grammarDB_insert("ssm2",ssm2_grammars)
  val _ = Parse.temp_set_grammars (addtyUDs (Parse.type_grammar()), addtmUDs (Parse.term_grammar()))
  end (* addUDs local *)
  end


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG configuration2_Axiom,
           case_def=configuration2_case_def,
           case_cong=configuration2_case_cong,
           induction=ORIG configuration2_induction,
           nchotomy=configuration2_nchotomy,
           size=SOME(Parse.Term`(ssm2$configuration2_size) :('cert -> num$num) ->
('command -> num$num) ->
('d -> num$num) ->
('e -> num$num) ->
('input -> num$num) ->
('output -> num$num) ->
('principal -> num$num) ->
('state -> num$num) ->
('cert, 'command, 'd, 'e, 'input, 'output, 'principal, 'state)
ssm2$configuration2 -> num$num`,
                     ORIG configuration2_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME configuration2_11,
           distinct=NONE,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];

val _ = if !Globals.print_thy_loads then TextIO.print "done\n" else ()
val _ = Theory.load_complete "ssm2"
end
